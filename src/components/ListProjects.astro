---
export interface Props {
  projects: Record<string, any[]>
}

const { projects } = Astro.props
const projectsTypes = Object.keys(projects)

// <div class="space-x-10">
//   <div class={`${item?.icon ? '' : item?.iconClass ?? 'i-carbon-unknown'} text-4xl w-1.2em h-1.2em`}>
//     {item?.icon && <item.icon />}
//   </div>
// </div>
// <div class="flex-auto">
//   <div class="text-1.1rem whitespace-pre-wrap">{item.name}</div>
//   <div op-70 text-sm whitespace-pre-wrap>{item.desc}</div>
// </div>
---

<ul class="pt-4">
  {
    projectsTypes.map((title, index) => (
      <Fragment>
        <div
          class="my-3 text-1.4em op-40 font-600"
          slide-enter
          style={`--enter-stage: ${index}`}
        >
          {title}
        </div>
        <li
          class="wrap grid grid-cols-1 sm:grid-cols-2 py-2 gap-2 pl-0! before:w-0!"
          slide-enter
          style={`--enter-stage: ${index}`}
        >
          {projects[title].map((item) => (
            <article class="item-container">
              <a
                href={item.link}
                title={item.name}
                target="_blank"
                class="item flex space-x-5 border-none flex-col gap-3 op-70"
                rel="noreferrer"
              >
                <h5 class="m0 flex gap-1 text-base items-center font-600 ">
                  <div
                    class={`${
                      item?.icon ? '' : item?.iconClass ?? 'i-carbon-unknown'
                    } w-1.2em h-1.2em`}
                  >
                    {item?.icon && <item.icon />}
                  </div>
                  <span class="ml-1">{item.name}</span>
                </h5>
                <p class="m0! flex-1">{item.desc}</p>
              </a>
            </article>
          ))}
        </li>
      </Fragment>
    ))
  }
</ul>
<style scoped>
  .wrap a.item {
    /* --at-apply: py-4 px-4 border-b-none rd transition;
    --at-apply: text-c-dim hover:(text-c-fgDeeper bg-gray bg-op-10);
    --at-apply: flex-col gap-3; */
    --at-apply: border-none;
  }

  .wrap article.item-container {
    --at-apply: b-1 b-black b-op-10 dark: (b-white b-op10) rounded-lg p-4
      text-sm shadow-sm transition hover: (bg-gray bg-op10);
  }

  .align-center {
    align-items: center;
  }
</style>
